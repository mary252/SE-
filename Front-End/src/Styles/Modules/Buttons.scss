$Button-Width: 250;
$Button-Height: 47;

$Button-Lg-Width: 393;
$Button-Lg-Height: 63;

.grommetux-button:not(.grommetux-button--plain):not(.grommetux-button--fill) {
  padding: 10px 25px;
  position: relative;
  max-width: none;
  font-weight: bold;
  min-width: auto;

  &.default {
    background-color: #FFFFFF;
    border-color: #C4C5C7;
    color: #4A4A4A;

    &:hover {
      box-shadow: 0px 0px 0px 2px darken(#C4C5C7, 5%);
    }
  }

  &:not(.no-loading) {
    animation: circleToButton 0.5s;
    animation-fill-mode: forwards;
    width: #{$Button-Width}px;

    &:after {
      content: '';
      opacity: 0;
      position: absolute;
      top: 50%;
      left: 50%;
      margin-top: $Button-Height/2*-1px;
      margin-left: $Button-Height/2*-1px;
      @include spinner(1, 3px solid $brand-color, .7s);
      width: #{$Button-Height}px;
      height: #{$Button-Height}px;
      transition: opacity 0.3s;
      transition-delay: 0.7s;
    }

    & > span {
      opacity: 0;
      animation: showText 0.2s;
      animation-delay: 0.5s;
      animation-fill-mode: forwards;

      &.grommetux-button__icon {
        position: absolute;
        right: 10px;
        top: 5px;
      }
    }

    &.disabled {
      opacity: 0.5;
      pointer-events: none;
    }


    &.grommetux-button--primary:not(.grommetux-button--disabled) {
      background-color: $brand-color;
      border-color: nth($brand-neutral-colors, 1);

      &.success {
        background-color: map-get($brand-status-colors, ok);
        border-color: darken(map-get($brand-status-colors, ok), 5%);

        &:hover {
          box-shadow: 0px 0px 0px 2px darken(map-get($brand-status-colors, ok), 5%);
        }
      }

      &:hover {
        box-shadow: 0px 0px 0px 2px nth($brand-neutral-colors, 1);
      }
    }

    &.grommetux-button--disabled {
      pointer-events: none;
      background-color: $brand-link-color;
      border-color: $brand-link-color;
    }

    &.loading-true {
      animation: buttonToCircle 0.7s;
      animation-delay: 0.2s;
      animation-fill-mode: forwards;
      width: #{$Button-Width}px;
      pointer-events: none;

      &:after {
        opacity: 1;
      }

      & > span {
        animation: hideText 0.2s;
        animation-fill-mode: forwards;
      }
    }
    &.loading-false {
      &:after {
        transition: opacity 0s;
      }
    }

    &.large {
      padding: 18px 80px;
      animation: circleToButtonLarge 0.5s;
      animation-fill-mode: forwards;
      width: #{$Button-Lg-Width}px;

      &:after {
        margin-top: $Button-Lg-Height/2*-1px;
        margin-left: $Button-Lg-Height/2*-1px;
        @include spinner(1, 3px solid $brand-color, .7s);
        width: #{$Button-Lg-Height}px;
        height: #{$Button-Lg-Height}px;
      }

      &.loading-true {
        animation: buttonToCircleLarge 0.7s;
        animation-fill-mode: forwards;
        width: #{$Button-Lg-Width}px;
      }
    }
  }
}


.grommetux-button.grommetux-button--focus.grommetux-button--plain {
  box-shadow: none;
}


@keyframes hideText {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes showText {
  from {opacity: 0;}
  to {opacity: 1;}
}

@include Animate--ButtonToCircle(buttonToCircle, $Button-Width, $Button-Height);
@include Animate--CircleToButton(circleToButton, $Button-Width, $Button-Height);

@include Animate--ButtonToCircle(buttonToCircleLarge, $Button-Lg-Width, $Button-Lg-Height);
@include Animate--CircleToButton(circleToButtonLarge, $Button-Lg-Width, $Button-Lg-Height);
